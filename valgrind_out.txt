==30280== Memcheck, a memory error detector
==30280== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==30280== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==30280== Command: ./minishell
==30280== Parent PID: 30277
==30280== 
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB4D: free_ast (ms_exec.c:314)
==30280==    by 0x10AB87: free_ast (ms_exec.c:322)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB76: free_ast (ms_exec.c:320)
==30280==    by 0x10AB87: free_ast (ms_exec.c:322)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB9F: free_ast (ms_exec.c:326)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== Invalid read of size 1
==30280==    at 0x10AEEB: main (ms_main.c:31)
==30280==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==30280== 
==30280== 
==30280== Process terminating with default action of signal 11 (SIGSEGV)
==30280==  Access not within mapped region at address 0x0
==30280==    at 0x10AEEB: main (ms_main.c:31)
==30280==  If you believe this happened as a result of a stack
==30280==  overflow in your program's main thread (unlikely but
==30280==  possible), you can try to increase the size of the
==30280==  main thread stack using the --main-stacksize= flag.
==30280==  The main thread stack size used in this run was 8388608.
==30280== 
==30280== HEAP SUMMARY:
==30280==     in use at exit: 243,228 bytes in 380 blocks
==30280==   total heap usage: 937 allocs, 557 frees, 273,810 bytes allocated
==30280== 
==30280== 11 bytes in 2 blocks are indirectly lost in loss record 10 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10DBF8: ft_strdup (ft_strdup.c:24)
==30280==    by 0x10D4B3: token_to_struct (tk_tokenizer.c:26)
==30280==    by 0x10CA07: execute_builtin (bi_exec.c:34)
==30280==    by 0x10A680: execute_ast (ms_exec.c:167)
==30280==    by 0x10AB06: execute_redirection (ms_exec.c:304)
==30280==    by 0x10A64D: execute_ast (ms_exec.c:162)
==30280==    by 0x10A22A: ms_exec (ms_exec.c:35)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 24 bytes in 1 blocks are indirectly lost in loss record 26 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10F924: ft_calloc (ft_calloc.c:20)
==30280==    by 0x10D490: token_to_struct (tk_tokenizer.c:25)
==30280==    by 0x10CA07: execute_builtin (bi_exec.c:34)
==30280==    by 0x10A680: execute_ast (ms_exec.c:167)
==30280==    by 0x10AB06: execute_redirection (ms_exec.c:304)
==30280==    by 0x10A64D: execute_ast (ms_exec.c:162)
==30280==    by 0x10A22A: ms_exec (ms_exec.c:35)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 32 bytes in 1 blocks are definitely lost in loss record 30 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10A28A: build_ast (ms_exec.c:52)
==30280==    by 0x10A213: ms_exec (ms_exec.c:32)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 59 (24 direct, 35 indirect) bytes in 1 blocks are definitely lost in loss record 36 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10F924: ft_calloc (ft_calloc.c:20)
==30280==    by 0x10D490: token_to_struct (tk_tokenizer.c:25)
==30280==    by 0x10CA07: execute_builtin (bi_exec.c:34)
==30280==    by 0x10A680: execute_ast (ms_exec.c:167)
==30280==    by 0x10AB06: execute_redirection (ms_exec.c:304)
==30280==    by 0x10A64D: execute_ast (ms_exec.c:162)
==30280==    by 0x10A22A: ms_exec (ms_exec.c:35)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 382 bytes in 38 blocks are still reachable in loss record 51 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10DBF8: ft_strdup (ft_strdup.c:24)
==30280==    by 0x10DA76: env_to_struct (ev_env_to_struct.c:32)
==30280==    by 0x10AE8E: main (ms_main.c:23)
==30280== 
==30280== 1,216 bytes in 38 blocks are still reachable in loss record 67 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10F924: ft_calloc (ft_calloc.c:20)
==30280==    by 0x10DA52: env_to_struct (ev_env_to_struct.c:29)
==30280==    by 0x10AE8E: main (ms_main.c:23)
==30280== 
==30280== 1,735 bytes in 38 blocks are still reachable in loss record 71 of 106
==30280==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==30280==    by 0x10DBF8: ft_strdup (ft_strdup.c:24)
==30280==    by 0x10DA90: env_to_struct (ev_env_to_struct.c:33)
==30280==    by 0x10AE8E: main (ms_main.c:23)
==30280== 
==30280== LEAK SUMMARY:
==30280==    definitely lost: 56 bytes in 2 blocks
==30280==    indirectly lost: 35 bytes in 3 blocks
==30280==      possibly lost: 0 bytes in 0 blocks
==30280==    still reachable: 3,333 bytes in 114 blocks
==30280==         suppressed: 239,804 bytes in 261 blocks
==30280== 
==30280== Use --track-origins=yes to see where uninitialised values come from
==30280== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 1 from 1)
==30280== 
==30280== 1 errors in context 1 of 6:
==30280== Invalid read of size 1
==30280==    at 0x10AEEB: main (ms_main.c:31)
==30280==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==30280== 
==30280== 
==30280== 1 errors in context 2 of 6:
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB9F: free_ast (ms_exec.c:326)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 
==30280== 1 errors in context 3 of 6:
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB76: free_ast (ms_exec.c:320)
==30280==    by 0x10AB87: free_ast (ms_exec.c:322)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
==30280== 
==30280== 1 errors in context 4 of 6:
==30280== Conditional jump or move depends on uninitialised value(s)
==30280==    at 0x10AB4D: free_ast (ms_exec.c:314)
==30280==    by 0x10AB87: free_ast (ms_exec.c:322)
==30280==    by 0x10A236: ms_exec (ms_exec.c:38)
==30280==    by 0x10AF1E: main (ms_main.c:35)
==30280== 
--30280-- 
--30280-- used_suppression:     95 leak readline readline_leaks:2 suppressed: 235,728 bytes in 257 blocks
--30280-- used_suppression:      4 readline_leaks readline_leaks:8 suppressed: 4,076 bytes in 4 blocks
==30280== 
==30280== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 1 from 1)
