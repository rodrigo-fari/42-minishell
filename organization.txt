   ▄▄▄▄███▄▄▄▄    ▄█  ███▄▄▄▄    ▄█     ▄████████    ▄█    █▄       ▄████████  ▄█        ▄█       
 ▄██▀▀▀███▀▀▀██▄ ███  ███▀▀▀██▄ ███    ███    ███   ███    ███     ███    ███ ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌   ███    █▀    ███    ███     ███    █▀  ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌   ███         ▄███▄▄▄▄███▄▄  ▄███▄▄▄     ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌ ▀███████████ ▀▀███▀▀▀▀███▀  ▀▀███▀▀▀     ███       ███       
 ███   ███   ███ ███  ███   ███ ███           ███   ███    ███     ███    █▄  ███       ███       
 ███   ███   ███ ███  ███   ███ ███     ▄█    ███   ███    ███     ███    ███ ███▌    ▄ ███▌    ▄ 
  ▀█   ███   █▀  █▀    ▀█   █▀  █▀    ▄████████▀    ███    █▀      ██████████ █████▄▄██ █████▄▄██ 
                                                                              ▀         ▀         

=======================================| Organizacao de pastas |

📁42_MINISHELL/
│
├──📁inc/
│   └──minishell.h
├──📁src/
│   ├────📁sub-folder1/
│   │     ├────────📄file1.c
│   │     └────────📄file2.c
│   ├────📁sub-folder2/
│   │     ├────────📄file1.c
│   │     └────────📄file2.c
│   └────📁sub-folder3/
│         ├────────📄file1.c
│         └────────📄file2.c
└──Makefile

=======================================| Necessidades do projeto |

1.Prompt interativo:
	Mostrar prompt enquanto espera comando.

2.Command execution:
	Must find and execute the correct command using the PATH or an absolute/relative path.

3.Signal Handling:
	ctrl+c : Display a new  prompt
	ctrl+d : Sai do shell
	ctrl+\ : Faz nada

4.Aspas e caracters especiais:
	' : Ignora caracters especiais dentro das aspas (simples)
	" : Interpreta "$" para variaveis mas ignora outros caracters especiais

5.Redirecionamento e pipes:
	< : Redirecionamento de input
	> : Redirecionamento de output
	>> : Redirecionamento de output e "aappend mode"
	<< : Le ate chegar em um delimitador
	| : Conecta os comandos pelo pipe

6.Variaveis de ambiente:
	$ : Suporte de variaveis ultilizando "$"
	? : Expande o status de saida do ultimo comando

7.Comandos Built-in
	echo : com o "-n"
	cd : com paths relativos e absolutos
	pwd : (no options)
	export : (no options)
	unset : (no options)
	env : (no arguments)
	exit : (no options)

=======================================| Organizacao de tarefas |

|👦🏻|Parsing e interpretacao de comandos:
	Parsing e user input (Manoseamento de strings, variaveis de ambiente, aspas, etc.)

|👩🏻|Execucao de comandos e redirecionamentos:
	Lida com execucao de comandos incluindo redirecionamentos e pipes

|👩🏻‍🦰|Implementacao de controle de processo:
	Implementa o controle de processos (fork, execve, etc.) e manipulação de sinais (ctrl+c)

|👩🏻‍🦰|Comandos Built-in:
	Separar a implementacao de built-ins (cd, echo)

|👦🏻👩🏻‍🦰|Integracao e testes:
	Normal testing :)

(apenas minha opiniao, nao precisa ser assim ksks :p)

=======================================| Funcoes autorizadas |

|📗|Funções de entrada/saída e memória:

readline: Lê uma linha de entrada do usuário, permitindo edição interativa.
rl_clear_history: Limpa o histórico de comandos armazenado por readline.
rl_on_new_line: Informa ao readline que uma nova linha está sendo processada.
rl_replace_line: Substitui a linha atual no buffer do readline.
rl_redisplay: Redesenha a linha atual no terminal.
add_history: Adiciona uma linha ao histórico de comandos do readline.
printf: Imprime texto formatado na saída padrão.
write: Escreve dados em um arquivo ou saída, como stdout.
malloc: Aloca memória dinâmica.
free: Libera memória previamente alocada com malloc.


|📘|Funções de arquivos e diretórios:

access: Verifica permissões de acesso a um arquivo.
open: Abre um arquivo e retorna um descritor de arquivo.
read: Lê dados de um arquivo ou entrada.
close: Fecha um descritor de arquivo.
unlink: Remove um arquivo do sistema de arquivos.
stat: Obtém informações sobre um arquivo (por caminho).
lstat: Similar a stat, mas trata links simbólicos.
fstat: Obtém informações sobre um arquivo usando um descritor.
opendir: Abre um diretório para leitura de arquivos.
readdir: Lê a próxima entrada em um diretório aberto.
closedir: Fecha um diretório previamente aberto com opendir.


|📙|Funções de processos e sinais:

fork: Cria um novo processo, duplicando o processo atual.
wait: Espera um processo filho terminar.
waitpid: Espera por um processo filho específico terminar.
wait3 e wait4: Semelhantes a wait, mas fornecem mais informações sobre o processo filho.
signal: Define um manipulador para um sinal específico.
sigaction: Configura ações para sinais com mais controle do que signal.
sigemptyset: Inicializa um conjunto de sinais vazio.
sigaddset: Adiciona um sinal a um conjunto de sinais.
kill: Envia um sinal a um processo ou grupo de processos.
exit: Termina um processo.


|📕|Funções de manipulação de terminal:

isatty: Verifica se um descritor de arquivo refere-se a um terminal.
ttyname: Retorna o nome do terminal associado a um descritor de arquivo.
ttyslot: Retorna o número da sessão de terminal.
ioctl: Controla dispositivos de E/S, incluindo terminais.
tcsetattr: Configura atributos de um terminal.
tcgetattr: Obtém atributos de um terminal.


|📗|Funções de variáveis de ambiente:

getenv: Obtém o valor de uma variável de ambiente.


|📘|Funções de manipulação de caminhos e diretórios:

getcwd: Obtém o diretório de trabalho atual.
chdir: Altera o diretório de trabalho atual.



|📙|Funções de execução de programas:

execve: Substitui o processo atual por um novo programa.


|📗|Funções de pipes e descritores:

dup: Duplica um descritor de arquivo.
dup2: Duplica um descritor de arquivo para um descritor específico.
pipe: Cria um canal unidirecional de comunicação entre processos.


|📘|Funções de tratamento de erros:

strerror: Retorna uma mensagem descritiva do erro correspondente a um número.
perror: Imprime uma mensagem de erro com base na variável global errno.


|📕|Funções de termcap (manipulação avançada de terminais):

tgetent: Inicializa o banco de dados de capacidades do terminal.
tgetflag: Retorna o valor de uma flag de capacidade do terminal.
tgetnum: Retorna o valor numérico de uma capacidade do terminal.
tgetstr: Retorna o valor de uma string de capacidade do terminal.
tgoto: Calcula uma string de posição de cursor para o terminal.
tputs: Envia uma string formatada ao terminal.

=======================================| ASCII ART e Emojis|


💻 💿 ⚙️ 🔧 📌
❌ ⛔️ 🚫 ⚠️ ✅
➡️ ↩️ ↪️ 🔀 🔁
🔴 🔵 🟢 💭 🫣

   ▄▄▄▄███▄▄▄▄    ▄█  ███▄▄▄▄    ▄█     ▄████████    ▄█    █▄       ▄████████  ▄█        ▄█       
 ▄██▀▀▀███▀▀▀██▄ ███  ███▀▀▀██▄ ███    ███    ███   ███    ███     ███    ███ ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌   ███    █▀    ███    ███     ███    █▀  ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌   ███         ▄███▄▄▄▄███▄▄  ▄███▄▄▄     ███       ███       
 ███   ███   ███ ███▌ ███   ███ ███▌ ▀███████████ ▀▀███▀▀▀▀███▀  ▀▀███▀▀▀     ███       ███       
 ███   ███   ███ ███  ███   ███ ███           ███   ███    ███     ███    █▄  ███       ███       
 ███   ███   ███ ███  ███   ███ ███     ▄█    ███   ███    ███     ███    ███ ███▌    ▄ ███▌    ▄ 
  ▀█   ███   █▀  █▀    ▀█   █▀  █▀    ▄████████▀    ███    █▀      ██████████ █████▄▄██ █████▄▄██ 
                                                                              ▀         ▀         



   ▄▄▄▄███▄▄▄▄      ▄████████    ▄█    █▄       ▄████████  ▄█        ▄█       
 ▄██▀▀▀███▀▀▀██▄   ███    ███   ███    ███     ███    ███ ███       ███       
 ███   ███   ███   ███    █▀    ███    ███     ███    █▀  ███       ███       
 ███   ███   ███   ███         ▄███▄▄▄▄███▄▄  ▄███▄▄▄     ███       ███       
 ███   ███   ███ ▀███████████ ▀▀███▀▀▀▀███▀  ▀▀███▀▀▀     ███       ███       
 ███   ███   ███          ███   ███    ███     ███    █▄  ███       ███       
 ███   ███   ███    ▄█    ███   ███    ███     ███    ███ ███▌    ▄ ███▌    ▄ 
  ▀█   ███   █▀   ▄████████▀    ███    █▀      ██████████ █████▄▄██ █████▄▄██ 
                                                          ▀         ▀         


